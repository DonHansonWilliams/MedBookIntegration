//mb_schemes
create view mb_schemes as
select co.corp_id,
		co.abbreviation as scheme_code,
		corporate as scheme_name,
		max(ca.anniv) as anniv,
		max(ca.start_date) as start_date,
		max(ca.end_date) as end_date,
		max(ca.renewal_date) as renewal_date
from corporate co, corp_anniversary ca
where co.corp_id = ca.corp_id and co.medbook = 1
group by co.corp_id, scheme_code, corporate;


//mb_scheme_groups
create view mb_scheme_groups as
select cg.category as category,
		(select be.benefit from benefit be where be.code = cg.benefit) as benefit,
		cg.benefit as ben_code,
		cg.limit as ben_limit,
		max(cg.anniv) as anniv,
		(select bs.sharing from benefit_sharing bs where bs.code = cg.sharing) as ben_share,
		cg.corp_id as corp_id,
		cg.idx as idx
from corp_groups cg, corporate co
where cg.sub_limit_of is null and cg.anniv = (select max(ca.anniv) from corp_anniversary ca where ca.corp_id = co.corp_id) and
		cg.corp_id = co.corp_id and co.medbook = 1
Group By category, benefit, ben_code, ben_limit, corp_id, ben_share, idx
order by category;


//mb_member_details
create view mb_member_details as
select pa.mobile_no as mobile_no,
mi.corp_id as scheme_code,
mi.family_no as family_no,
mi.member_no as member_no,
mi.surname ||' ' || mi.first_name || ' '|| mi.other_names as member_name,
mi.cancelled as member_status,
mi.gender as gender,
mi.dob as dob,
max(ma.start_date) as start_date,
max(ma.end_date) as end_date,
max(ma.anniv) as anniv
from principal_applicant pa right join member_info mi on pa.family_no = mi.family_no right join member_anniversary ma on mi.member_no = ma.member_no and mi.medbook = 1
Group By mobile_no, scheme_code, family_no, member_no, member_name, gender, dob, member_status;


//mb_cover_benefits
Create view mb_cover_benefits as
Select
    max(be.benefit) as benefit,
    mb.benefit as benefit_code,
    mi.corp_id as scheme_code,
    mi.family_no as family_no,
	mi.member_no as member_no,
    mb.limit as benefit_limit,
    mb.waiting_period as waiting_period,
    max(mb.anniv) as anniv,
    mb.reserve_amt as reserves,
mb.expense as expenditure,
mb.balance as balance
From member_info mi join member_benefits mb on mi.member_no = mb.member_no join benefit be on be.code = mb.benefit
WHERE mb.anniv = (select max(mb.anniv) from member_benefits mb where mb.member_no = mi.member_no) and mi.medbook = 1
Group By scheme_code, family_no, member_no, benefit_code, benefit_limit, waiting_period, reserves, expenditure, balance;


//claims
#Add Auto Increment Id of smart_bills
Alter Table smart_bills
Add claim_source varchar(20);


//mb_claim_status
Create View mb_claim_status as
select a.invoice_no,
		a.smart_bill_id as bill_id,
		(select service from service where service.code = a.service) service,
		a.member_no,
		a.anniv,
		(select provider from provider where provider.code = a.provider) hospital,
		a.provider as provider_code,
		a.vet_status as vet_status,
		a.date_entered as date_entered,
		a.invoiced_amount as invoiced_amount,
		a.deduction_amount as deduction_amount,
		(select deduction_reason.deduct_reason from deduction_reason where deduction_reason.code = a.deduction_reason) as deduction_reason,
		a.amount_payable as amount_payable,
		a.id
From bills a
Where a.smart_bill_id like '%-MB' AND a.smart_bill_id is not null;


//mb_claims_experience
Create View mb_claims_experience as
select (select corporate from corporate where corp_id = pa.corp_id) as corporate,
		pa.surname ||' '||pa.first_name||' '|| pa.other_names as principal_name,
		(select mi.surname ||' '|| mi.first_name||' '|| mi.other_names from member_info mi where mi.member_no = bi.member_no) as member_name,
		mi.family_no as family_no,
		mi.member_no as member_no,
		(select fa.relation from family_relation fa where fa.code = mi.relation_to_principal) as relation,
		bi.claim_no as claim_no,
		bi.id as idx,
		bi.anniv as anniv,
		(select pr.provider from provider pr where pr.code = bi.provider) as provider,
		bi.invoice_no as invoice_no,
		(select se.service from service se where se.code = bi.service) as service,
		bi.invoice_date as invoice_date,
		(select benefit from benefit where benefit.code = bi.claim_nature) as benefit,
		bi.date_received as date_received,
		bi.date_entered as date_entered,
		sum(bi.invoiced_amount) as invoiced_amount,
		sum(bi.amount_payable) as amount_payable
    from bills bi, principal_applicant pa, member_info mi
where bi.member_no = mi.member_no and pa.family_no = mi.family_no
and bi.vet_status = 1 and mi.medbook = 1
group by principal_name, member_name, member_no, family_no, claim_no, idx, anniv, invoice_no, date_received, date_entered, service, relation, benefit, provider, corporate, invoice_date;


//mb_reimbursements
Create View mb_reimbursements as
select bi.invoice_no,
		(select service from service where service.code = bi.service) service,
		bi.member_no,
		bi.anniv,
		(select provider from provider where provider.code = bi.provider) hospital,
		bi.provider as provider_code,
		bi.vet_status as vet_status,
		bi.date_entered as date_entered,
		bi.invoiced_amount as invoiced_amount,
		bi.deduction_amount as deduction_amount,
		(select deduction_reason.deduct_reason from deduction_reason where deduction_reason.code = bi.deduction_reason) as deduction_reason,
		bi.amount_payable as amount_payable,
		bi.id
From bills bi, member_info mi
Where bi.member_no =mi.member_no
and bi.vet_status = 1 and mi.medbook = 1 and bi.refund > 0;


//mb_pre_auth
#Add Auto Increment Id of pre_auth_no
CREATE TABLE mb_pre_auth (
        pre_auth_no numeric(15,0) NOT NULL AUTO INCREMENT,
        member_no varchar(20) ,
        date_requested date ,
        diagnosis varchar(255) ,
        ben_code numeric(5,0) ,
        prov_code varchar(15) ,
        requested_amt numeric(15,2) ,
        deducted_amt numeric(15,2) ,
        deduction_reason varchar(255) ,
        approved_amount numeric(15,2) ,
        request_notes varchar(255) ,
        requested_by varchar(50)
    );

//mb_users
create view mb_users as
select user_name, user_pass from users where medbook = 1;

//ALTER
alter table corporate add medbook numeric(1);
alter table member_info add medbook numeric(1);
alter table users add medBook numeric(1);